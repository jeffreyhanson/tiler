% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_tiles.R
\name{create_tiles}
\alias{create_tiles}
\alias{create_tiles.default}
\alias{create_tiles.RasterLayer}
\title{Create tiles}
\usage{
create_tiles(x)

\method{create_tiles}{default}(x, ...)

\method{create_tiles}{RasterLayer}(x, output_dir, profile = "mercator",
  resampling = "bilinear", zoom = "1-10", verbose = FALSE, threads = 1,
  cache = TRUE)
}
\arguments{
\item{x}{\code{\link[raster]{RasterLayer-class}} object.}

\item{...}{not used.}

\item{output_dir}{\code{\link{character}} directory in which to save tiles.}

\item{profile}{\code{character} Tile cutting profile. Valid arguments are
"mercator", "geodetic", or "raster". Defaults to "mercator" (Google Maps
compatible).}

\item{resampling}{\code{character} Resampling method for processing Spatial
data. Valid arguments are "average", "near", "bilinear", "cubic",
"cubicspline", "lanczos", or "antialias". Defaults to "average".}

\item{zoom}{\code{character} Zoom levels to render. The levels can be
specified as a single number (e.g \code{"10"}) or as a range
(e.g. \code{"1-10"}).}

\item{verbose}{\code{logical} Should information be printed during
processing?}

\item{threads}{\code{numeric} Number of threads to use for processing.
Defaults to 1.}

\item{cache}{\code{logical} if tiles already exist in argument to
\code{output_dir} should the processing be skipped?}
}
\value{
\code{character} path containing the tile map template.
}
\description{
Create tiles for a spatial dataset.
}
\details{
This function creates a tile layer, following the
  \href{https://wiki.osgeo.org/wiki/Tile_Map_Service_Specification}{Tile Map Service specification}, using the object in argument to \code{x} and saves it
  in the argument to \code{output_dir}.
}
\examples{
# load leafleat
library(leaflet)

# load data
data(netherlands, package = "mapmisc")

# define directory to save tiles
d <- file.path(tempdir(), "tiles")

# create tiles
p <- create_tiles(nldEvel, d)

\donttest{
# create leaflet map
m <- leaflet() \%>\%
     setView(lng = -71.0589, lat = 42.3601, zoom = 12) \%>\%
     addTiles(p)

# render tiles in leaflet
print(m)
}
}
\seealso{
\code{\link[leaflet]{addTiles}}.
}
